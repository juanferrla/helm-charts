apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: build-and-push-docker-
spec:
  entrypoint: build-push
  templates:
  - name: build-push
    steps:
    - - name: clone-repo
        template: git-clone
    - - name: build-docker-image
        template: docker-build
    - - name: push-image
        template: docker-push

  # Template para clonar el repositorio Git
  - name: git-clone
    container:
      image: alpine/git:latest
      command: [sh, -c]
      args: 
        - |
          # Configurar las credenciales de Git usando las variables de entorno
          git config --global credential.helper store
          echo "https://${GIT_USERNAME}:${GIT_TOKEN}@github.com" > ~/.git-credentials
          # Clonar el repositorio
          git clone https://github.com/juanferrla/helm-charts.git /src || exit 1
          ls -lah /src
      env:
      - name: GITHUB_USERNAME
        valueFrom:
           secretKeyRef:
             name: github-secret
             key: username
      - name: GITHUB_TOKEN
        valueFrom:
           secretKeyRef:
             name: github-secret
             key: token
      volumeMounts:
        - name: workspace
          mountPath: /src

  # Template para construir la imagen Docker
  - name: docker-build
    container:
      image: docker:latest
      command: [sh, -c]
      args:
        - |
          echo "Creando imagen mssql";
          wget https://raw.githubusercontent.com/juanferrla/helm-charts/refs/heads/main/holamundo/Dockerfile -O /src/Dockerfile
          
          docker build -t harbor.juanan.local/default/my-mssql:latest /src
          echo "Imagen creada";
      volumeMounts:
      - name: docker-sock
        mountPath: /var/run/docker.sock  # Montar el socket de Docker
      - name: workspace
        mountPath: /src

  # Template para subir la imagen a Harbor
  - name: docker-push
    container:
      image: docker:latest
      command: [sh, -c]
      args:
        - |
          echo "$DOCKER_PASSWORD" | docker login harbor.juanan.local -u "$DOCKER_USERNAME" --password-stdin;
          docker push harbor.juanan.local/default/my-mssql:latest;
      env:
        - name: DOCKER_USERNAME
          valueFrom:
            secretKeyRef:
              name: docker-secret
              key: username
        - name: DOCKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docker-secret
              key: password
      volumeMounts:
      - name: docker-sock
        mountPath: /var/run/docker.sock  # Montar el socket de Docker
      - name: workspace
        mountPath: /src

  volumes:
  - name: workspace
    emptyDir: {}
  # Volumen para interactuar con Docker
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
    # Volumen para la configuraci√≥n del daemon.json
  - name: daemon-config
    configMap:
      name: docker-config
